<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAMMOAADDDgAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AADxVZYA8FWWAPJWlwDyVpcAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AADzcKIA/5S3APt+qhr+ga1cxVN2K503UEicNk8KnjhRAGsFDgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAA+36rAPp8qQz9ga1e/oOuzv+Er9fCUnNIoTtV4KE8VqifOVIykStBApkySgAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAPh5pwD1c6MD/YGtiv6Dr/r/hK///4Ow2MFRckahPFXqoj1X/6I9VuWgO1R3nDZPC503
        UAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA+3uqAPt8qhb+gq7V/4Ov//+Dr///g7DYwVFxRqE8VeqiPVf/oj1X/6I9
        V/qgO1RnpUFbAJImPwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        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
        r///g6///oKv4v2ArYD8j7dK/ZzBl/6dwe7+nsL//p7C//6ewv/+nsL//p7C+v+fw7zxkLNZpkBaYKA6
        VMaiPVf8oj1X/6I9V/+iPVf/oj1X/6I9V/+hO1SZwnSSAJMlPQAAAAAAAAAAAOp3pAD/hrAA/YGtev+D
        r///g6///4Ov8P6BrZr8iLJK/ZvAfP6dwd/+nsL//p7C//6ewv/+nsL//p7C//6ewv/+nsL//p7C//6e
        wvP/n8Oi4H2eTKA7VHehO1Xcoj1X/6I9V/+iPVf/oj1X/6E7VZWwVXAAlCY/AAAAAAAAAAAAAAAAAP+F
        rwD+ga1x/4Ov+/6Brrb8g69U/Zm+Zf6dwcz+ncH9/p3C//6ewv/+nsL//p7C//6ewv/+nsL//p7C//6e
        wv/+nsL//p7C//6ewv/+nsLm/p3ChsdjgUqfOVOVoTxW76I9V/+iPVf/oDtVeaVBXACOIjsAAAAAAAAA
        AAAAAAAA/oOuAPyArEn9gq5t/JW8Uv6dwbL+ncH4/p7C//6ewv/+ncL//p7C//6ewv3+ncHQ/Z3Brv6e
        wuX+nsL//p7C//6ewv/+nsL//p7C//6ewv/+nsL+/5/D0/mYvGqrRWBPoTtUn6E7VZqeOVIjnztUAAAA
        AAAAAAAAAAAAAAAAAAD3ibMA8nOkA/yav2f+ncHs/p7C//6ewv/+nsL//p7C//6ewv/+ncHi/ZzBfPyZ
        vhr0irMD/JvAM/2dwaP+nsLy/p7C//6ewv/+nsL//p7C//6ewv/+nsL//p7C+f6dwmL///8AmCtDApww
        SwB7BBEAAAAAAAAAAAAAAAAAAAAAAPiQuAD/tdQA/Jm+Gv2cwHj+ncHe/p7C//6ewv/+ncHy/Z3Bnvya
        vy72j7YB+pa7AAAAAAD7mb0A+JS5Bf2cwHn+nsL9/p7C//6ewv/+nsL//p7C//6ewv/+nsL4/JvAYv+f
        wgDsibMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD5lLoA84mwAfyavyr9nMCR/pzBrP2b
        wEz6l7wH/Jm+AAAAAADvha0A/ZzAAPuZvg39nMBg/p3B0f6ewv/+nsL//p7C//6ewv/+nsL9/p3BzP2b
        wFz6l70J+5m+AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA+ZO5APiR
        twL6krgF6GOaAPSHrwAAAAAA+5i8APqVugT8m8A//Z3Bs/6ewvj+nsL//p7C//6ewv/+nsL//p3B4v2c
        wHz8mb4Z/6bJAPePtgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA9YmzAP+jxQD8mb4j/ZzBkv6ewuz+nsL//p7C//6ewv/+nsL//p7C8P2c
        wZv8mr8t9ZC2AfmWuwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD1ibMA/6jJAPyZvkP+nMHN/p7C/v6ewv/+nsL//p7C+f2c
        wbf8m79F+Za8BvuZvgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD1jbUA/6nLAPyYvRj9m8B2/p3B0v6d
        wcr9nMBj+5i9Dv2cwADuhawAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA+JO5APeS
        uQH7mL0V+5i9EvKLsgD2kbcAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA////////////+D///+AP///AB///wAf/+MAH//DAA//gAAP/wAAB/8AA
        AP/AAAA/wAAAH8AAAA/AgAAHwAADB8ABAQfgAAAH4AAAB+AAAAfgAAAH4AAAB+AAAAfgAAAv8AcAP/ge
        AD/+eAD///AB///wB///+B////x///////8=
</value>
  </data>
</root>